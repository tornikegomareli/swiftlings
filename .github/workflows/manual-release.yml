name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.1.0 or v0.1.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Validate Version Format
      run: |
        VERSION="${{ github.event.inputs.version }}"
        # Remove 'v' prefix if present for validation
        VERSION_CHECK=$(echo "$VERSION" | sed 's/^v//')
        
        if ! [[ "$VERSION_CHECK" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Invalid version format. Please use semantic versioning (e.g., 0.1.0 or v0.1.0)"
          exit 1
        fi
        
        # Ensure version starts with 'v'
        if [[ ! "$VERSION" =~ ^v ]]; then
          VERSION="v$VERSION"
        fi
        
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Check if Tag Exists
      run: |
        if git rev-parse "${{ env.VERSION }}" >/dev/null 2>&1; then
          echo "Error: Tag ${{ env.VERSION }} already exists"
          exit 1
        fi
    
    - name: Update Version in Code
      run: |
        # Update version in Swiftlings.swift
        sed -i "s/version: \"[^\"]*\"/version: \"${{ env.VERSION }}\"/" Sources/Swiftlings/Swiftlings.swift
        
        # Check if changes were made
        if git diff --quiet; then
          echo "No version changes needed in code"
        else
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Sources/Swiftlings/Swiftlings.swift
          git commit -m "chore: bump version to ${{ env.VERSION }}"
          git push
        fi
    
    - name: Create and Push Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a "${{ env.VERSION }}" -m "Release ${{ env.VERSION }}"
        git push origin "${{ env.VERSION }}"
    
    - name: Trigger Release Workflow
      run: |
        echo "Tag ${{ env.VERSION }} created successfully!"
        echo "The release workflow will be triggered automatically."