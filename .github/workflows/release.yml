name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: '5.10'
    
    - name: Build Release
      run: |
        swift build -c release
        
    - name: Archive Binary
      run: |
        BINARY_PATH=".build/release/swiftlings"
        ARCHIVE_NAME="swiftlings-${{ github.ref_name }}-macos.tar.gz"
        tar -czf "$ARCHIVE_NAME" -C .build/release swiftlings
        echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
        
    - name: Generate Release Notes
      id: release_notes
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          echo "RELEASE_NOTES=Initial release of Swiftlings - A Swift learning tool inspired by Rustlings" >> $GITHUB_ENV
        else
          # Generate commit list since previous tag
          COMMITS=$(git log --pretty=format:"- %s" $PREV_TAG..${{ github.ref_name }})
          
          cat << 'EOF' > release_notes.md
## What's Changed

${COMMITS}

**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${{ github.ref_name }}
EOF
          # Replace variables in the file
          sed -i "s|\${COMMITS}|$COMMITS|g" release_notes.md
          sed -i "s|\${{ github.repository }}|${{ github.repository }}|g" release_notes.md
          sed -i "s|\${PREV_TAG}|$PREV_TAG|g" release_notes.md
          sed -i "s|\${{ github.ref_name }}|${{ github.ref_name }}|g" release_notes.md
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release_notes.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Swiftlings ${{ github.ref_name }}
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false
        files: |
          ${{ env.ARCHIVE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}