{
  "format_version": 1,
  "welcome_message": "Welcome to Swiftlings! ðŸ¦‰\n\nIs this your first time? Don't worry, Swiftlings is made for beginners!\nWe are going to teach you a lot of things about Swift, but before we can\nget started, here are some notes about how Swiftlings operates:\n\n1. The central concept behind Swiftlings is that you solve exercises. These\n   exercises usually contain some compiler or logic errors which cause the\n   exercise to fail compilation or testing. It's your job to find all errors\n   and fix them!\n2. Make sure to have your editor open in the project directory. Swiftlings\n   will show you the path of the current exercise. Open the exercise file\n   in your editor, fix errors and save the file. Swiftlings will automatically\n   detect the file change and rerun the exercise.\n3. If you're stuck on an exercise, enter 'h' to show a hint.\n4. Have fun learning Swift!",
  "final_message": "ðŸŽ‰ Congratulations! You've completed all Swiftlings exercises!\n\nWe hope you enjoyed learning about Swift!\nIf you noticed any issues, don't hesitate to report them on GitHub.\nYou can also contribute your own exercises to help the community!",
  "exercises": [
    {
      "name": "intro1",
      "dir": "00_basics",
      "test": false,
      "hint": "This exercise compiles successfully! Run it to see the output."
    },
    {
      "name": "intro2",
      "dir": "00_basics",
      "test": false,
      "hint": "Swift uses 'print()' not 'println()'. The 'ln' part is automatic!"
    },
    {
      "name": "variables1",
      "dir": "00_basics",
      "test": false,
      "hint": "Variables in Swift are declared with 'var' keyword. Try: var x = 5"
    },
    {
      "name": "variables2",
      "dir": "00_basics",
      "test": false,
      "hint": "The 'let' keyword creates constants that cannot be changed. Use 'var' for values that need to change!"
    },
    {
      "name": "variables3",
      "dir": "00_basics",
      "test": false,
      "hint": "Use 'let' for values that won't change (like pi), and 'var' for values that will change (like radius)."
    },
    {
      "name": "types1",
      "dir": "00_basics",
      "test": false,
      "hint": "String for text, Int for whole numbers, Double for decimal numbers. Match the type to the value!"
    },
    {
      "name": "types2",
      "dir": "00_basics",
      "test": false,
      "hint": "Add a type annotation like 'let temperature: Double' or use a decimal initial value like '100.0'"
    },
    {
      "name": "operators1",
      "dir": "00_basics",
      "test": false,
      "hint": "Remember: + for addition, - for subtraction, * for multiplication, / for division, % for remainder"
    },
    {
      "name": "operators2",
      "dir": "00_basics",
      "test": false,
      "hint": "Use >= for 'greater than or equal', && for 'and', || for 'or'. For ranges, combine conditions with &&"
    },
    {
      "name": "strings1",
      "dir": "00_basics",
      "test": false,
      "hint": "Use \\(variableName) inside strings for interpolation. For concatenation, use the + operator."
    },
    {
      "name": "strings2",
      "dir": "00_basics",
      "test": false,
      "hint": "Multi-line strings use triple quotes \"\"\" at the start and end. Use \\ for escape sequences like \\\" and \\n"
    }
  ]
}